plugins {
    id 'java'
    id 'com.google.protobuf' version '0.9.4'
}

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'io.grpc:grpc-netty-shaded:1.59.0'
    implementation 'io.grpc:grpc-protobuf:1.59.0'
    implementation 'io.grpc:grpc-stub:1.59.0'
    implementation 'io.grpc:grpc-api:1.59.0'
    implementation 'io.grpc:grpc-services:1.59.0'
    implementation 'io.perfmark:perfmark-api:0.26.0'
    implementation 'io.perfmark:perfmark-impl:0.26.0'
    implementation 'javax.annotation:javax.annotation-api:1.3.2'
}

protobuf {
    protoc {
        artifact = 'com.google.protobuf:protoc:3.25.0-RC2'
    }
    plugins {
        grpc {
            artifact = 'io.grpc:protoc-gen-grpc-java:1.59.0'
        }
    }
    generateProtoTasks {
        all().each { task ->
            task.plugins {
                grpc {}
            }
        }
    }
}

task run_peer(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    mainClass = 'ds.assign.p2p.Peer'
}


task fatJar(type: Jar) {

    manifest {
        attributes 'Main-Class': "ds.assign.p2p.Peer"
    }

    archiveBaseName = "${rootProject.name}"
    tasks.withType(Jar){
        duplicatesStrategy = DuplicatesStrategy.INCLUDE
    }
    from { configurations.compileClasspath.collect { it.isDirectory() ? it : zipTree(it) } }
    with jar
}
